From ef61cae3c309a5e7eaf2e61611bea10c4e23bd48 Mon Sep 17 00:00:00 2001
From: Simo Sorce <simo@redhat.com>
Date: Mon, 12 Nov 2012 17:43:05 -0500
Subject: [PATCH 110/113] Upload CA cert in the directory on install

This will later allow clients to securely download the CA cert by
performaing mutual auth using LDAP with GSSAPI
---
 install/share/Makefile.am        |  1 +
 install/share/upload-cacert.ldif |  7 +++++++
 ipaserver/install/dsinstance.py  | 16 ++++++++++++++++
 3 files changed, 24 insertions(+)
 create mode 100644 install/share/upload-cacert.ldif

--- a/install/share/Makefile.am
+++ b/install/share/Makefile.am
@@ -53,6 +53,7 @@ app_DATA =				\
 	sudobind.ldif			\
 	automember.ldif			\
 	replica-automember.ldif		\
+	upload-cacert.ldif              \
 	$(NULL)
 
 EXTRA_DIST =				\
--- /dev/null
+++ b/install/share/upload-cacert.ldif
@@ -0,0 +1,7 @@
+# add CA certificate to LDAP server
+dn: cn=CAcert,cn=ipa,cn=etc,$SUFFIX
+changetype: add
+objectClass: nsContainer
+objectClass: pkiCA
+cn: CAcert
+cACertificate;binary:: $CADERCERT
--- a/ipaserver/install/dsinstance.py
+++ b/ipaserver/install/dsinstance.py
@@ -43,6 +43,7 @@ from ipaserver.install import httpinstan
 from ipaserver.install import replication
 from ipalib import util, errors
 from ipaserver.plugins.ldap2 import ldap2
+import base64
 
 SERVER_ROOT_64 = "/usr/lib64/dirsrv"
 SERVER_ROOT_32 = "/usr/lib/dirsrv"
@@ -246,6 +247,8 @@ class DsInstance(service.Service):
         if hbac_allow:
             self.step("creating default HBAC rule allow_all", self.add_hbac)
 
+        self.step("Upload CA cert to the directory", self.__upload_ca_cert)
+
         self.__common_post_setup()
 
         self.start_creation("Configuring directory server", 60)
@@ -569,6 +572,19 @@ class DsInstance(service.Service):
         # check for open secure port 636 from now on
         self.open_ports.append(636)
 
+    def __upload_ca_cert(self):
+        """
+        Upload the CA certificate in DER form in the LDAP directory.
+        """
+
+        dirname = config_dirname(self.serverid)
+        certdb = certs.CertDB(self.realm_name, nssdir=dirname, subject_base=self.subject_base)
+
+        dercert = certdb.get_cert_from_db(certdb.cacert_name, pem=False)
+        self.sub_dict['CADERCERT'] = base64.b64encode(dercert)
+
+        self._ldap_mod('upload-cacert.ldif', self.sub_dict)
+
     def __add_default_layout(self):
         self._ldap_mod("bootstrap-template.ldif", self.sub_dict)
 
